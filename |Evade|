local wP = game:GetService("Workspace").Game.Players
local p = game:GetService('Players')
local lP =p.LocalPlayer
local gS = game:GetService("GuiService")
local l = game:GetService("Lighting")

local fAI = function()
	for _,v in pairs(wP:GetChildren()) do
		if not p:FindFirstChild(v.Name) then
			return v
		end
	end
end

local gD = function()
	for i,v in pairs(wP:GetChildren()) do
		if v:GetAttribute("Downed") then
			return v
		end
	end
end


local l2 = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local w = l2.CreateLib("EzGames |Evade|", "BloodTheme")

local mT = w:NewTab("Main")
local eT = w:NewTab("Esp")
local eT2 = w:NewTab("Extra")
local nT= w:NewTab("Notification")

local mS = mT:NewSection("Main Section")
local eS = eT:NewSection("Esp Section")
local eS2 = eT2:NewSection("Extra Section")
local nS= nT:NewSection("Notification!")

local TargetWalkspeed
mS:NewSlider("walkSpeed", "Increase your walkSpeed", 65, 16, function(v)
	TargetWalkspeed = v
end)

mS:NewSlider("hipHeight", "Increase your jumpPower", 100, -1.4, function(v)
	game.Players.LocalPlayer.Character.Humanoid.HipHeight = v
end)

mS:NewSlider("fov", "Increase your fov", 120, 1, function(v)
	local ohString1 = "FieldOfView"
	local ohNumber2 = v
	game:GetService("ReplicatedStorage").Events.UpdateSetting:FireServer(ohString1, ohNumber2)
end)

mS:NewSlider("timeControl", "Control day & night", 24, 0, function(v)
	game.Lighting.ClockTime = v
end)

local nCS = mS:NewToggle("No Camera Shake", "No camera shake when the bots near you", function(v)
	_G.nCS = v
	
	task.spawn(function()
		while task.wait() do
			if not _G.nCS then break end
				lP.PlayerScripts.CameraShake.Value = CFrame.new(0,0,0) * CFrame.new(0,0,0)
		end
	end)
end)

local aDC = mS:NewToggle("Auto Drink Cola", "Auto drink cola everytime it runs out", function(v)
		_G.aDC = v
		
		task.spawn(function()
			while task.wait() do
				if not _G.aDC then break end
					local ohString1 = "Cola"
					game:GetService("ReplicatedStorage").Events.UseUsable:FireServer(ohString1)
					wait(6)
		end
	end)
end)

local aR = mS:NewToggle("Auto Respawn", "Auto respawn when you are downed", function(v)
			_G.aR = v
			
			task.spawn(function()
				while task.wait() do
					if not _G.aR then break end
					game:GetService("ReplicatedStorage").Events.Respawn:FireServer()
		end
	end)
end)

eS:NewButton("Player Esp", "You can see other player now", function()
	local c = workspace.CurrentCamera
	local ps = game:GetService("Players")
	local lp = ps.LocalPlayer
	local rs = game:GetService("RunService")
	local function getdistancefc(part)
		return (part.Position - c.CFrame.Position).Magnitude
	end
	local function esp(p, cr)
		local h = cr:WaitForChild("Humanoid")
		local hrp = cr:WaitForChild("HumanoidRootPart")
		local text = Drawing.new("Text")
		text.Visible = false
		text.Center = true
		text.Outline = true
		text.Font = 2
		text.Color = Color3.fromRGB(255, 255, 255)
		text.Size = 17
		local c1
		local c2
		local c3
		local function dc()
			text.Visible = false
			text:Remove()
			if c1 then
				c1:Disconnect()
				c1 = nil
			end
			if c2 then
				c2:Disconnect()
				c2 = nil
			end
			if c3 then
				c3:Disconnect()
				c3 = nil
			end
		end
		c2 =
			cr.AncestryChanged:Connect(
				function(_, parent)
					if not parent then
					dc()
				end
				end
			)
		c3 =
			h.HealthChanged:Connect(
				function(v)
					if (v <= 0) or (h:GetState() == Enum.HumanoidStateType.Dead) then
					dc()
				end
				end
			)
		c1 =
			rs.RenderStepped:Connect(
				function()
					local hrp_pos, hrp_os = c:WorldToViewportPoint(hrp.Position)
					if hrp_os then
					text.Position = Vector2.new(hrp_pos.X, hrp_pos.Y)
					text.Text = p.Name .. " (" .. tostring(math.floor(getdistancefc(hrp))) .. " m)"
					text.Visible = true
				else
					text.Visible = false
				end
				end
			)
	end
	local function p_added(p)
		if p.Character then
			esp(p, p.Character)
		end
		p.CharacterAdded:Connect(
			function(cr)
				esp(p, cr)
			end
		)
	end
	for i, p in next, ps:GetPlayers() do
		if p ~= lp then
			p_added(p)
		end
	end
	ps.PlayerAdded:Connect(p_added)
end)

eS2:NewButton("Chat Spy", "You can see the chat now", function()
	spyOnMyself = false
	public = false
	publicItalics = true
	privateProperties = {
		Color = Color3.fromRGB(0,255,255); 
		Font = Enum.Font.SourceSansBold;
		TextSize = 18;
	}
	local StarterGui = game:GetService("StarterGui")
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	local saymsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest")
	local getmsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("OnMessageDoneFiltering")
	local instance = (_G.chatSpyInstance or 0) + 1
	_G.chatSpyInstance = instance

	local function onChatted(p,msg)
		if _G.chatSpyInstance == instance then
			if p==player and msg:lower():sub(1,4)=="/spy" then
				enabled = not enabled
				wait(0.3)
				privateProperties.Text = "{SPY "..(enabled and "EN" or "DIS").."ABLED}"
				StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
			elseif enabled and (spyOnMyself==true or p~=player) then
				msg = msg:gsub("[\n\r]",''):gsub("\t",' '):gsub("[ ]+",' ')
				local hidden = true
				local conn = getmsg.OnClientEvent:Connect(function(packet,channel)
					if packet.SpeakerUserId==p.UserId and packet.Message==msg:sub(#msg-#packet.Message+1) and (channel=="All" or (channel=="Team" and public==false and Players[packet.FromSpeaker].Team==player.Team)) then
						hidden = false
					end
				end)
				wait(1)
				conn:Disconnect()
				if hidden and enabled then
					if public then
						saymsg:FireServer((publicItalics and "/me " or '').."{SPY} [".. p.Name .."]: "..msg,"All")
					else
						privateProperties.Text = "{SPY} [".. p.Name .."]: "..msg
						StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
					end
				end
			end
		end
	end

	for _,p in ipairs(Players:GetPlayers()) do
		p.Chatted:Connect(function(msg) onChatted(p,msg) end)
	end
	Players.PlayerAdded:Connect(function(p)
		p.Chatted:Connect(function(msg) onChatted(p,msg) end)
	end)
	privateProperties.Text = "{SPY "..(enabled and "EN" or "DIS").."ABLED}"
	StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
	local chatFrame = player.PlayerGui.Chat.Frame
	chatFrame.ChatChannelParentFrame.Visible = true
	chatFrame.ChatBarParentFrame.Position = chatFrame.ChatChannelParentFrame.Position+UDim2.new(UDim.new(),chatFrame.ChatChannelParentFrame.Size.Y)
end)



eS2:NewButton("Full Bright", "You can see claerly now", function()
	l.Ambient = Color3.new(1, 1, 1)
	l.ColorShift_Bottom = Color3.new(1, 1, 1)
	l.ColorShift_Top = Color3.new(1, 1, 1)
	game.Lighting.FogEnd = 100000
	game.Lighting.FogStart = 0
	game.Lighting.ClockTime = 14
	game.Lighting.Brightness = 2
	game.Lighting.GlobalShadows = false
end)

eS2:NewButton("Infinity Jump", "You can jump infinityly", function()
	game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
end)

eS2:NewButton("Press Q To Teleport", "Press Q to teleport", function()
	plr = game.Players.LocalPlayer 
	hum = plr.Character.HumanoidRootPart 
	mouse = plr:GetMouse()
	mouse.KeyDown:connect(function(key)
		if key == "q" then
			if mouse.Target then
				hum.CFrame = CFrame.new(mouse.Hit.x, mouse.Hit.y + 5, mouse.Hit.z)
			end
		end
	end)
end)

eS2:NewButton("Return To Main Menu", "Return to the starting screen", function()
	game:GetService("ReplicatedStorage").Events.ReturnToMenu:FireServer()
end)

eS2:NewButton("Low Quality", "Reduce some lag", function()
	local ohString1 = "LowQuality"
	local ohBoolean2 = true
	game:GetService("ReplicatedStorage").Events.UpdateSetting:FireServer(ohString1, ohBoolean2)
end)

game:GetService("RunService").RenderStepped:Connect(function()
	pcall(function()
		if game.Players.LocalPlayer.Character.Humanoid.MoveDirection.Magnitude > 0 then
			game.Players.LocalPlayer.Character:TranslateBy(game.Players.LocalPlayer.Character.Humanoid.MoveDirection * TargetWalkspeed/100)
		end
	end)
end)

nS:NewLabel("+ walkSpeed")
nS:NewLabel("+ autoRespawn")
nS:NewLabel("+ hipHeight")
nS:NewLabel("+ fov")
